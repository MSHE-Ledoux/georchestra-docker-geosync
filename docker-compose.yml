version: "3.2"

volumes:
  postgresql_data:
  ldap_data:
  ldap_config:
  geoserver_datadir:
  geoserver_geodata:
  geoserver_tiles:
  mapfishapp_uploads:
  extractorapp_extracts:
  geonetwork_datadir:
  georchestra_ouvert:
  georchestra_restreint:
  # volumes montés en nfs dans docker-compose.geosync-prod.yml
  #geosync_test_ouvert:
  #geosync_test_restreint:

services:
  database:
    image: geosync/database
    build: ../georchestra/postgresql.geosync
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=georchestra
      - POSTGRES_PASSWORD=georchestra
    volumes:
      #- postgresql_data:/var/lib/postgresql/data
      - /docker/georchestra/postgresql_data:/var/lib/postgresql/data
    restart: always

  ldap:
    image: geosync/ldap
    build: ../georchestra/ldap.geosync
    environment:
      - SLAPD_DC_STRING=dc=georchestra,dc=org
      - SLAPD_ORGANISATION=georchestra
      - SLAPD_DOMAIN=georchestra.org
      - SLAPD_PASSWORD=secret
      - SLAPD_ADDITIONAL_MODULES=groupofmembers
      # variables de production définies dans docker-compose.geosync-prod.yml
      #- AD_DOMAIN=ad.mydomain.org
      #- AD_DC_STRING=dc=ad,dc=mydomain,dc=org
      #- AD_SERVER=ad_server.mydomain.org
      #- AD_PASSWORD=ad_password
    volumes:
      #- ldap_data:/var/lib/ldap
      - /docker/georchestra/ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap
    restart: always

  proxy:
    image: georchestra/security-proxy:latest
    depends_on:
      - ldap
      - database
    volumes:
      - ./config:/etc/georchestra
    environment:
      - XMS=256M
      - XMX=1G
    restart: always

  cas:
    image: georchestra/cas:latest
    depends_on:
      - ldap
    volumes:
      - ./config:/etc/georchestra
    environment:
      - XMS=256M
      - XMX=1G
    restart: always

  header:
    image: georchestra/header:latest
    volumes:
      - ./config:/etc/georchestra
    environment:
      - XMS=256M
      - XMX=512M
    restart: always

  mapfishapp:
    image: georchestra/mapfishapp:latest
    depends_on:
      - database
    volumes:
      - ./config:/etc/georchestra
      - mapfishapp_uploads:/mnt/mapfishapp_uploads
    environment:
      - XMS=256M
      - XMX=2G
    restart: always

  extractorapp:
    image: georchestra/extractorapp:latest
    depends_on:
      - database
    volumes:
      - ./config:/etc/georchestra
      - extractorapp_extracts:/mnt/extractorapp_extracts
    environment:
      - XMS=256M
      - XMX=2G
    restart: always

  geoserver:
    image: geosync/geoserver
    build: ../georchestra/geoserver/webapp/src/docker.geosync
    depends_on:
      - ldap
    volumes:
      #- geoserver_datadir:/mnt/geoserver_datadir
      - /docker/georchestra/geoserver_datadir:/mnt/geoserver_datadir
      #- geoserver_geodata:/mnt/geoserver_geodata
      - /docker/georchestra/geoserver_geodata:/mnt/geoserver_geodata
      - geoserver_tiles:/mnt/geoserver_tiles
      - ./config:/etc/georchestra
    environment:
      # variable de production déplacée dans docker-compose.geosync-prod.yml
      #- SERVER_URL=https://georchestra.mydomain.org
      - TZ=Europe/Paris
      - XMS=256M
      - XMX=8G
    restart: always

  console:
    image: georchestra/console:latest
    depends_on:
      - ldap
      - database
    volumes:
      - ./config:/etc/georchestra
    environment:
      - XMS=256M
      - XMX=1G

  geonetwork:
    image: georchestra/geonetwork:3-latest
    depends_on:
      - ldap
      - database
    volumes:
      - ./config:/etc/georchestra
      - geonetwork_datadir:/mnt/geonetwork_datadir
    environment:
      - XMS=256M
      - XMX=6G
    restart: always

  analytics:
    image: georchestra/analytics:latest
    depends_on:
      - database
    volumes:
      - ./config:/etc/georchestra
    environment:
      - XMS=256M
      - XMX=1G
    restart: always

